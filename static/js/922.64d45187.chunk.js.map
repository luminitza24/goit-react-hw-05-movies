{"version":3,"file":"static/js/922.64d45187.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.jsx","components/Requests.jsx","components/common/Error.jsx"],"sourcesContent":["import {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Loading } from '../common/Loading';\nimport { Error } from '../common/Error';\nimport { fetchMovie } from '../Requests';\nimport './MovieDetails.css';\nimport Notiflix from 'notiflix';\nimport '../common/Header.css';\n\nconst MovieItem = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsloading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovie(movieId)\n      .then(response => {\n        if (response.success === false) {\n          setMovieData(null);\n          setNotFound(true);\n        } else {\n          setMovieData(response);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  }, [movieId]);\n  return (\n    <div className=\"container\">\n      <Link to={location?.state?.from ?? '/'} className=\"button\">\n        Go Back\n      </Link>\n      {isLoading && <Loading />}\n      {hasError && <Error />}\n      {notFound && Notiflix.Notify.failure('Requested movie does not exist!')}\n      {movieData && (\n        <div className=\"card\">\n          <div className=\"movie-card\">\n            <div className=\"image-cont\">\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\n                alt=\"Movie Poster\"\n                className=\"image\"\n              />\n            </div>\n\n            <div className=\"card-body\">\n              <h4 className=\"card-title \">\n                {movieData.title ?? 'Unknown'}\n                <span>({movieData.release_date.split('-')[0]})</span>\n              </h4>\n              <p className=\"card-text\">\n                {' '}\n                User score:\n                <span className=\"card-text-span\">\n                  {' '}\n                  {(movieData.vote_average * 10).toFixed(0)}%{' '}\n                </span>\n              </p>\n              <p className=\"card-text\">Overview:</p>\n              <span className=\"card-text-span\"> {movieData.overview}</span>\n              <p className=\"card-text-title\">Genres:</p>\n              {movieData.genres && movieData.genres.length > 0 && (\n                <span className=\"card-text-span\">\n                  {' '}\n                  {movieData.genres.map(genre => genre.name).join(', ')}\n                </span>\n              )}\n            </div>\n            <div className=\"cast-info\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\"> Additional information: </h4>\n                <ul className=\"nav\">\n                  <li>\n                    <NavLink\n                      className=\"nav-link-info\"\n                      to=\"cast\"\n                      state={{ from: location?.state?.from ?? '/' }}\n                    >\n                      {' '}\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      className=\"nav-link-info\"\n                      to=\"reviews\"\n                      state={{ from: location?.state?.from ?? '/' }}\n                    >\n                      {' '}\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n                <Suspense fallback={<Loading />}>\n                  <Outlet />\n                </Suspense>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieItem;\n","const url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee';\n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovie = id => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n};\n\nexport const fetchCast = id => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchSearch = query => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(\n    res => res.json()\n  );\n};\n","export const Error = () => {\n    return <h2>Error loading movies</h2>\n}"],"names":["movieId","useParams","useState","movieData","setMovieData","isLoading","setIsloading","hasError","setHasError","notFound","setNotFound","location","useLocation","useEffect","fetchMovie","then","response","success","catch","err","console","log","finally","className","to","state","from","Loading","Error","Notiflix","src","poster_path","alt","title","release_date","split","vote_average","toFixed","overview","genres","length","map","genre","name","join","Suspense","fallback","url","key","fetchTrending","fetch","res","json","id","fetchCast","fetchReviews","fetchSearch","query"],"sourceRoot":""}