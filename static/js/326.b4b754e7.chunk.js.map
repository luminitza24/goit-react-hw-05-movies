{"version":3,"file":"static/js/326.b4b754e7.chunk.js","mappings":"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","sources":["components/MovieList.jsx","components/Requests.jsx","components/Search.jsx","components/pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport '../components/Movies.css';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div className=\"container\">\n      {movies.length > 0 &&\n        movies.map(movie => {\n          return (\n            <Link\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className=\"movie-link\"\n            >\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  <div className=\"movie-card\">\n                    <div className=\"image-cont\">\n                      <h2>{movie.title}</h2>\n                      <img\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                        alt=\"Movie Poster\"\n                        className=\"image\"\n                      />\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n","const url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee';\n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovie = id => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n};\n\nexport const fetchCast = id => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchSearch = query => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(\n    res => res.json()\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from './Requests';\nimport { MovieList } from './MovieList';\nimport Notiflix from 'notiflix';\n\nexport const Search = () => {\n  const [searchParams] = useSearchParams();\n  const [searchTerm, setSearchTerm] = useState(\n    searchParams.get('query') ? searchParams.get('query') : ''\n  );\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    setSearchTerm(searchParams.get('query'));\n  }, [searchParams]);\n\n  useEffect(() => {\n    console.log(searchTerm);\n    if (searchTerm && searchTerm.length > 2) {\n      fetchSearch(searchTerm)\n        .then(res => {\n          if (res.results.length > 0) {\n            setMovies(res.results);\n          } else {\n            setMovies([]);\n            Notiflix.Notify.failure(`No movies found for '${searchTerm}'`);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n          Notiflix.Notify.failure(\n            'Something went wrong please try again later!'\n          );\n        });\n    }\n  }, [searchTerm]);\n\n  return (\n    <>\n      {searchTerm && (\n        <h6 className=\"search\">\n          The search term is: <span className=\"text-info\">{searchTerm}</span>\n        </h6>\n      )}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n","import { useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Search } from '../Search';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const inputRef = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = inputRef.current.value;\n    if (value.length >= 3) {\n      setSearchParams({ query: value });\n    } else {\n      Notiflix.Notify.failure('The search term is too short');\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"form\" role=\"search\">\n        <div className=\"container-form\">\n          <div className=\"input-group\">\n            <input\n              ref={inputRef}\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Search movie\"\n              aria-label=\"Search\"\n              aria-describedby=\"search-addon\"\n            />\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n          </div>\n        </div>\n      </form>\n      {searchParams.get('query') && <Search />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","movies","location","useLocation","className","length","map","movie","to","id","state","from","title","src","poster_path","alt","url","key","fetchTrending","fetch","then","res","json","fetchMovie","fetchCast","fetchReviews","fetchSearch","query","Search","useSearchParams","searchParams","useState","get","searchTerm","setSearchTerm","setMovies","useEffect","console","log","results","Notiflix","catch","error","inputRef","useRef","setSearchParams","onSubmit","e","preventDefault","value","current","role","ref","type","placeholder"],"sourceRoot":""}