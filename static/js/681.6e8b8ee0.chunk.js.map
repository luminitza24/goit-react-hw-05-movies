{"version":3,"file":"static/js/681.6e8b8ee0.chunk.js","mappings":"sQAAA,IAAMA,EAAM,gCACNC,EAAM,mCAECC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAAOG,MAAK,SAAAC,GAAG,OAC9DA,EAAIC,MAD0D,GAGjE,EAEYC,EAAa,SAAAC,GACxB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,oBAA8BP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAC1D,EAEYG,EAAY,SAAAD,GACvB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAC/DA,EAAIC,MAD2D,GAGlE,EAEYI,EAAe,SAAAF,GAC1B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAC/DA,EAAIC,MAD2D,GAGlE,EAEYK,EAAc,SAAAC,GACzB,OAAOT,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,EAAtC,kBAAmDW,IAASR,MACtE,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAEN,C,gGCwBD,UA/CgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAaG,GACVT,MAAK,SAAAqB,GACAA,EAASC,SAAWD,EAASC,QAAQC,OAAS,GAChDV,EAAWQ,EAASC,SACpBH,GAAY,KAEZN,EAAW,IACXM,GAAY,GAEf,IACAK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZR,GAAY,EACb,IACAW,SAAQ,WACPb,GAAa,EACd,GACJ,GAAE,CAACN,KAGF,iBAAKoB,UAAU,YAAf,UACGf,IAAa,SAAC,IAAD,IACbE,IAAY,SAAC,IAAD,IACZE,IAAY,wBAAI,4BAChBN,GAAWA,EAAQW,OAAS,IAC3B,yBACGX,EAAQkB,KAAI,SAAAC,GAAM,OACjB,4BACE,eAAGF,UAAU,SAAb,UAAsB,YACZ,iBAAMA,UAAU,YAAhB,SAA6BE,EAAOC,aAE9C,cAAGH,UAAU,cAAb,SAA4BE,EAAOE,YAJ3BF,EAAO3B,GADA,QAY5B,C,mECpDY8B,EAAQ,WACjB,OAAO,wBAAI,wBACd,C","sources":["components/Requests.jsx","components/Reviews.jsx","components/common/Error.jsx"],"sourcesContent":["const url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee';\n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovie = id => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n};\n\nexport const fetchCast = id => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchSearch = query => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(\n    res => res.json()\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loading } from './common/Loading';\nimport { Error } from './common/Error';\nimport { fetchReviews } from './Requests';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsloading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(response => {\n        if (response.results && response.results.length > 0) {\n          setReviews(response.results);\n          setNotFound(false);\n        } else {\n          setReviews([]);\n          setNotFound(true);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loading />}\n      {hasError && <Error />}\n      {notFound && <h5>We don't have reviews. </h5>}\n      {reviews && reviews.length > 0 && (\n        <div>\n          {reviews.map(review => (\n            <div key={review.id}>\n              <p className=\"review\">\n                Author: <span className=\"text-info\">{review.author}</span>\n              </p>\n              <p className=\"review-text\">{review.content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","export const Error = () => {\n    return <h2>Error loading movies</h2>\n}"],"names":["url","key","fetchTrending","fetch","then","res","json","fetchMovie","id","fetchCast","fetchReviews","fetchSearch","query","movieId","useParams","useState","reviews","setReviews","isLoading","setIsloading","hasError","setHasError","notFound","setNotFound","useEffect","response","results","length","catch","err","console","log","finally","className","map","review","author","content","Error"],"sourceRoot":""}